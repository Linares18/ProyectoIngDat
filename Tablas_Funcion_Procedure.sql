CREATE TABLE USUARIO
(
  COD_USUARIO NUMBER(3) NOT NULL PRIMARY KEY,
  NOMBRE VARCHAR2(50) NOT NULL,
  APELLIDO VARCHAR2(50) NOT NULL,
  TELEFONO VARCHAR2(9) NOT NULL,
  CORREO_ELECTRONICO VARCHAR2(100) NOT NULL,
  VERIFICACION VARCHAR2(1) NOT NULL,
  ESTADO VARCHAR2(20) NOT NULL
);

CREATE TABLE VIAJERO
(
  DIRECCION_EXT VARCHAR2(100) NOT NULL,
  FIRMA_COMPROMISO VARCHAR2(1) NOT NULL,
  COPIA_DNI VARCHAR2(1) NOT NULL,
  HISTORIAL_CONFIABLE VARCHAR2(1),
  COD_VIAJERO REFERENCES USUARIO NOT NULL PRIMARY KEY
);

CREATE TABLE CLIENTE
(
  CALLE VARCHAR2(50) NOT NULL,
  NUMERO VARCHAR2(50) NOT NULL,
  DEPARTAMENTO VARCHAR2(70) NOT NULL,
  PROVINCIA VARCHAR2(70) NOT NULL,
  COD_CLIENTE REFERENCES USUARIO NOT NULL PRIMARY KEY
);

CREATE TABLE VUELO
(
  COD_VUELO NUMBER(3) NOT NULL PRIMARY KEY,
  ORIGEN VARCHAR2(70) NOT NULL,
  DESTINO VARCHAR2(70) NOT NULL,
  FECHA_SALIDA DATE NOT NULL,
  RETORNO DATE NOT NULL,
  AEROLINEA VARCHAR2(70) NOT NULL
);

CREATE TABLE VIAJERO_VUELO
(
  CLASE VARCHAR2(50) NOT NULL,
  ASIENTO VARCHAR2(50) NOT NULL,
  COD_VIAJERO REFERENCES VIAJERO NOT NULL,
  COD_VUELO REFERENCES VUELO NOT NULL,
  PRIMARY KEY (COD_VIAJERO, COD_VUELO)
);

CREATE TABLE PAGO
(
  COD_PAGO NUMBER(3) NOT NULL PRIMARY KEY,
  MONTO NUMBER(5,2) NOT NULL,
  METODO VARCHAR2(50) NOT NULL,
  FECHA DATE NOT NULL
);

CREATE TABLE TRABAJADOR
(
  COD_TRABAJADOR NUMBER(3) NOT NULL PRIMARY KEY,
  NOMBRE VARCHAR2(50) NOT NULL,
  APELLIDO VARCHAR2(50) NOT NULL,
  CORREO_ELECTRONICO VARCHAR2(100) NOT NULL,
  CARGO VARCHAR2(50) NOT NULL,
  FECHA_NACIMIENTO DATE NOT NULL,
  SUELDO NUMBER(6,2) NOT NULL
);

CREATE TABLE WISHLIST
(
  COD_WISHLIST NUMBER(3) NOT NULL PRIMARY KEY,
  NOMBRE VARCHAR2(50) NOT NULL,
  PRIVACIDAD VARCHAR2(50) NOT NULL,
  LINK VARCHAR2(100) NOT NULL,
  COD_CLIENTE REFERENCES CLIENTE NOT NULL
);

CREATE TABLE PRODUCTO
(
  COD_PRODUCTO NUMBER(3) NOT NULL PRIMARY KEY,
  PRECIO NUMBER(5,2) NOT NULL,
  LINK VARCHAR2(1000) NOT NULL,
  NOMBRE VARCHAR2(50) NOT NULL,
  PROFUNDIDAD NUMBER(4,2) NOT NULL,
  ALTURA NUMBER(4,2) NOT NULL,
  ANCHO NUMBER(4,2) NOT NULL,
  PESO NUMBER(4,2) NOT NULL,
  CATEGORIA VARCHAR2(50) NOT NULL
);

INSERT INTO PRODUCTO VALUES(100, 179, 'https://www.amazon.com/-/es/AMD-Ryzen-5700G-Procesador-desbloqueado', 'PROCESADORE RYZEN', 1.57, 1.57, 0.40, 0.91, 'PROCESADOR');

CREATE TABLE PEDIDO
(
  COD_PEDIDO NUMBER(3) NOT NULL PRIMARY KEY,
  SERVICIO VARCHAR2(50) NOT NULL
);

CREATE TABLE PAQUETE
(
  COD_PAQUETE NUMBER(3) NOT NULL PRIMARY KEY,
  ESTADO VARCHAR2(50) NOT NULL,
  COD_PEDIDO REFERENCES PEDIDO NOT NULL
);

CREATE TABLE VIAJERO_PEDIDO
(
  ESTADO VARCHAR2(50) NOT NULL,
  TIEMPO_DEMORA VARCHAR2(50) NOT NULL,
  COMISION NUMBER(5,2) NOT NULL,
  COD_VIAJERO REFERENCES VIAJERO NOT NULL,
  COD_PEDIDO REFERENCES PEDIDO NOT NULL,
  PRIMARY KEY (COD_VIAJERO, COD_PEDIDO)
);

CREATE TABLE OBSERVACION
(
  OBSERVACION VARCHAR2(100) NOT NULL,
  COD_TRABAJDOR REFERENCES TRABAJADOR NOT NULL,
  COD_PAQUETE REFERENCES PAQUETE NOT NULL,
  PRIMARY KEY (COD_TRABAJDOR, COD_PAQUETE)
);

CREATE TABLE VERIFICACION
(
  VERIFICACION VARCHAR2(100) NOT NULL,
  COD_TRABAJADOR REFERENCES TRABAJADOR NOT NULL,
  COD_PAGO REFERENCES PAGO NOT NULL,
  PRIMARY KEY (COD_TRABAJADOR, COD_PAGO)
);

CREATE TABLE COTIZACION
(
  COD_COTIZACION NUMBER(3) NOT NULL PRIMARY KEY,
  SERVICIO VARCHAR2(50) NOT NULL,
  PRECIO_SERV NUMBER(4,2) NOT NULL,
  COD_PRODUCTO REFERENCES PRODUCTO NOT NULL
);

CREATE TABLE PRODUCTO_PEDIDO
(
  CANTIDAD NUMBER(2) NOT NULL,
  PRECIO_FINAL NUMBER(4,2) NOT NULL,
  COD_PRODUCTO REFERENCES PRODUCTO NOT NULL,
  COD_PEDIDO REFERENCES PEDIDO NOT NULL,
  PRIMARY KEY (COD_PRODUCTO, COD_PEDIDO)
);

truncate table USUARIO;
DROP TABLE USUARIO;
SELECT * FROM USUARIO;

CREATE OR REPLACE FUNCTION CALCULAR_VOLUMEN(COD NUMBER)
RETURN NUMBER AS
    VOLUMEN NUMBER(4,2);
    prof NUMBER(4,2);
    anch NUMBER(4,2);
    alt NUMBER(4,2);
BEGIN
    SELECT PROFUNDIDAD, ANCHO, ALTURA
    INTO prof, anch, alt
    FROM PRODUCTO WHERE COD_PRODUCTO = COD;
    VOLUMEN := prof * anch * alt;
    RETURN VOLUMEN;
END;

DECLARE
    VOLUMEN NUMBER(4,2);
BEGIN
    VOLUMEN := CALCULAR_VOLUMEN(100);
    DBMS_OUTPUT.PUT_LINE(VOLUMEN || ' cm');
END;

SET SERVEROUTPUT ON;


CREATE OR REPLACE PROCEDURE MOSTRAR_USUARIO_ESTADO(cod USUARIO.COD_USUARIO%TYPE)
AS
    est VARCHAR2(100);
BEGIN
    SELECT ESTADO INTO est FROM USUARIO WHERE COD_USUARIO = cod;
    DBMS_OUTPUT.PUT_LINE(est);
END;

BEGIN
    DBMS_OUTPUT.PUT_LINE('Tu estado en el sistema es el siguiente: ');
    MOSTRAR_USUARIO_ESTADO(100);
END;


